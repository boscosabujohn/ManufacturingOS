import { useState } from 'react';
import { X } from 'lucide-react';

export function UpdateProgressModal({ isOpen, onClose, onUpdate }: any) {
  const [progress, setProgress] = useState(0);
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-md"><div className="bg-gradient-to-r from-blue-600 to-blue-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Update Progress</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><label className="block text-sm font-medium mb-2">Progress (%)</label><input type="range" min="0" max="100" value={progress} onChange={(e) => setProgress(Number(e.target.value))} className="w-full" /><p className="text-center text-2xl font-bold mt-4">{progress}%</p></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onUpdate({ progress })} className="px-4 py-2 bg-blue-600 text-white rounded-lg">Update</button></div></div></div>);
}

export function AddMilestoneProgressModal({ isOpen, onClose, onAdd }: any) {
  const [data, setData] = useState({ milestone: '', status: 'Not Started', completionDate: '' });
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-2xl"><div className="bg-gradient-to-r from-green-600 to-green-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Add Milestone Progress</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6 space-y-4"><div><label className="block text-sm font-medium mb-1">Milestone</label><input type="text" value={data.milestone} onChange={(e) => setData({...data, milestone: e.target.value})} className="w-full px-3 py-2 border rounded-lg" /></div><div><label className="block text-sm font-medium mb-1">Status</label><select value={data.status} onChange={(e) => setData({...data, status: e.target.value})} className="w-full px-3 py-2 border rounded-lg"><option>Not Started</option><option>In Progress</option><option>Completed</option></select></div><div><label className="block text-sm font-medium mb-1">Completion Date</label><input type="date" value={data.completionDate} onChange={(e) => setData({...data, completionDate: e.target.value})} className="w-full px-3 py-2 border rounded-lg" /></div></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onAdd(data)} className="px-4 py-2 bg-green-600 text-white rounded-lg">Add</button></div></div></div>);
}

export function LogActivityModal({ isOpen, onClose, onLog }: any) {
  const [activity, setActivity] = useState('');
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-2xl"><div className="bg-gradient-to-r from-purple-600 to-purple-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Log Activity</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><label className="block text-sm font-medium mb-2">Activity Description</label><textarea value={activity} onChange={(e) => setActivity(e.target.value)} rows={5} className="w-full px-3 py-2 border rounded-lg" placeholder="Describe the work completed..." /></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onLog({ activity })} className="px-4 py-2 bg-purple-600 text-white rounded-lg">Log</button></div></div></div>);
}

export function ViewProgressReportModal({ isOpen, onClose }: any) {
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-5xl max-h-[90vh] overflow-hidden"><div className="bg-gradient-to-r from-orange-600 to-orange-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Progress Report</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6 overflow-y-auto max-h-[calc(90vh-120px)]"><p className="text-gray-600">Comprehensive progress report view</p></div><div className="bg-gray-50 px-6 py-4 flex justify-end border-t"><button onClick={onClose} className="px-4 py-2 bg-orange-600 text-white rounded-lg">Close</button></div></div></div>);
}

export function CompareProgressModal({ isOpen, onClose }: any) {
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-4xl"><div className="bg-gradient-to-r from-teal-600 to-teal-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Compare Progress</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><p className="text-gray-600">Compare actual vs planned progress</p></div><div className="bg-gray-50 px-6 py-4 flex justify-end border-t"><button onClick={onClose} className="px-4 py-2 bg-teal-600 text-white rounded-lg">Close</button></div></div></div>);
}

export function SetKPIsModal({ isOpen, onClose, onSet }: any) {
  const [kpis, setKpis] = useState({ targetProgress: 80, taskCompletion: 90, budgetVariance: 5 });
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-2xl"><div className="bg-gradient-to-r from-indigo-600 to-indigo-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Set KPIs</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6 space-y-4"><div><label className="block text-sm font-medium mb-1">Target Progress (%)</label><input type="number" value={kpis.targetProgress} onChange={(e) => setKpis({...kpis, targetProgress: Number(e.target.value)})} className="w-full px-3 py-2 border rounded-lg" /></div><div><label className="block text-sm font-medium mb-1">Task Completion Target (%)</label><input type="number" value={kpis.taskCompletion} onChange={(e) => setKpis({...kpis, taskCompletion: Number(e.target.value)})} className="w-full px-3 py-2 border rounded-lg" /></div><div><label className="block text-sm font-medium mb-1">Budget Variance Threshold (%)</label><input type="number" value={kpis.budgetVariance} onChange={(e) => setKpis({...kpis, budgetVariance: Number(e.target.value)})} className="w-full px-3 py-2 border rounded-lg" /></div></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onSet(kpis)} className="px-4 py-2 bg-indigo-600 text-white rounded-lg">Set</button></div></div></div>);
}

export function FilterProgressModal({ isOpen, onClose, onApply }: any) {
  const [filters, setFilters] = useState({ dateRange: 'all', status: 'all' });
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-2xl"><div className="bg-gradient-to-r from-yellow-600 to-yellow-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Filter Progress</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><div className="grid grid-cols-2 gap-4"><div><label className="block text-sm font-medium mb-1">Date Range</label><select value={filters.dateRange} onChange={(e) => setFilters({...filters, dateRange: e.target.value})} className="w-full px-3 py-2 border rounded-lg"><option value="all">All</option><option>This Week</option><option>This Month</option></select></div><div><label className="block text-sm font-medium mb-1">Status</label><select value={filters.status} onChange={(e) => setFilters({...filters, status: e.target.value})} className="w-full px-3 py-2 border rounded-lg"><option value="all">All</option><option>On Track</option><option>At Risk</option><option>Delayed</option></select></div></div></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onApply(filters)} className="px-4 py-2 bg-yellow-600 text-white rounded-lg">Apply</button></div></div></div>);
}

export function ExportProgressModal({ isOpen, onClose, onExport }: any) {
  const [format, setFormat] = useState('PDF');
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-md"><div className="bg-gradient-to-r from-emerald-600 to-emerald-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Export Progress</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><label className="block text-sm font-medium mb-2">Format</label><select value={format} onChange={(e) => setFormat(e.target.value)} className="w-full px-3 py-2 border rounded-lg"><option>PDF</option><option>Excel</option><option>PowerPoint</option></select></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onExport({ format })} className="px-4 py-2 bg-emerald-600 text-white rounded-lg">Export</button></div></div></div>);
}

export function AddPhotoModal({ isOpen, onClose, onAdd }: any) {
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-2xl"><div className="bg-gradient-to-r from-cyan-600 to-cyan-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Add Progress Photos</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><div className="border-2 border-dashed rounded-lg p-8 text-center"><button className="px-4 py-2 bg-cyan-600 text-white rounded-lg">Choose Photos</button></div></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onAdd()} className="px-4 py-2 bg-cyan-600 text-white rounded-lg">Upload</button></div></div></div>);
}

export function ViewTimelineModal({ isOpen, onClose }: any) {
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-5xl max-h-[90vh] overflow-hidden"><div className="bg-gradient-to-r from-pink-600 to-pink-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Progress Timeline</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6 overflow-y-auto max-h-[calc(90vh-120px)]"><p className="text-gray-600">Visual timeline of progress</p></div><div className="bg-gray-50 px-6 py-4 flex justify-end border-t"><button onClick={onClose} className="px-4 py-2 bg-pink-600 text-white rounded-lg">Close</button></div></div></div>);
}

export function ShareProgressModal({ isOpen, onClose, onShare }: any) {
  const [email, setEmail] = useState('');
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-md"><div className="bg-gradient-to-r from-amber-600 to-amber-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Share Progress</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><label className="block text-sm font-medium mb-2">Share with</label><input type="email" value={email} onChange={(e) => setEmail(e.target.value)} className="w-full px-3 py-2 border rounded-lg" placeholder="email@example.com" /></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onShare({ email })} className="px-4 py-2 bg-amber-600 text-white rounded-lg">Share</button></div></div></div>);
}

export function ViewDetailsModal({ isOpen, onClose, progress }: any) {
  if (!isOpen || !progress) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-4xl"><div className="bg-gradient-to-r from-slate-600 to-slate-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Progress Details</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><p className="text-gray-600">Detailed progress information</p></div><div className="bg-gray-50 px-6 py-4 flex justify-end border-t"><button onClick={onClose} className="px-4 py-2 bg-slate-600 text-white rounded-lg">Close</button></div></div></div>);
}

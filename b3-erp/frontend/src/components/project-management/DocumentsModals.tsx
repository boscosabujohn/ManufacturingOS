import { useState } from 'react';
import { X } from 'lucide-react';

export function UploadDocumentModal({ isOpen, onClose, onUpload }: any) {
  const [data, setData] = useState({ name: '', category: 'Contract', tags: '' });
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-2xl"><div className="bg-gradient-to-r from-blue-600 to-blue-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Upload Document</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6 space-y-4"><div><label className="block text-sm font-medium mb-1">Document Name</label><input type="text" value={data.name} onChange={(e) => setData({...data, name: e.target.value})} className="w-full px-3 py-2 border rounded-lg" /></div><div><label className="block text-sm font-medium mb-1">Category</label><select value={data.category} onChange={(e) => setData({...data, category: e.target.value})} className="w-full px-3 py-2 border rounded-lg"><option>Contract</option><option>Drawing</option><option>Report</option><option>Certificate</option></select></div><div className="border-2 border-dashed rounded-lg p-8 text-center"><button className="px-4 py-2 bg-blue-600 text-white rounded-lg">Choose File</button></div></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onUpload(data)} className="px-4 py-2 bg-blue-600 text-white rounded-lg">Upload</button></div></div></div>);
}

export function EditDocumentModal({ isOpen, onClose, onEdit, doc }: any) {
  const [data, setData] = useState({ name: doc?.name || '', tags: doc?.tags || '' });
  if (!isOpen || !doc) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-2xl"><div className="bg-gradient-to-r from-green-600 to-green-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Edit Document</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6 space-y-4"><div><label className="block text-sm font-medium mb-1">Name</label><input type="text" value={data.name} onChange={(e) => setData({...data, name: e.target.value})} className="w-full px-3 py-2 border rounded-lg" /></div><div><label className="block text-sm font-medium mb-1">Tags</label><input type="text" value={data.tags} onChange={(e) => setData({...data, tags: e.target.value})} className="w-full px-3 py-2 border rounded-lg" /></div></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onEdit(data)} className="px-4 py-2 bg-green-600 text-white rounded-lg">Save</button></div></div></div>);
}

export function ShareDocumentModal({ isOpen, onClose, onShare, doc }: any) {
  const [email, setEmail] = useState('');
  if (!isOpen || !doc) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-md"><div className="bg-gradient-to-r from-purple-600 to-purple-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Share Document</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><label className="block text-sm font-medium mb-2">Share with</label><input type="email" value={email} onChange={(e) => setEmail(e.target.value)} className="w-full px-3 py-2 border rounded-lg" placeholder="email@example.com" /></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onShare({ email })} className="px-4 py-2 bg-purple-600 text-white rounded-lg">Share</button></div></div></div>);
}

export function MoveDocumentModal({ isOpen, onClose, onMove, doc }: any) {
  const [folder, setFolder] = useState('');
  if (!isOpen || !doc) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-md"><div className="bg-gradient-to-r from-orange-600 to-orange-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Move Document</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><label className="block text-sm font-medium mb-2">Move to Folder</label><input type="text" value={folder} onChange={(e) => setFolder(e.target.value)} className="w-full px-3 py-2 border rounded-lg" /></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onMove({ folder })} className="px-4 py-2 bg-orange-600 text-white rounded-lg">Move</button></div></div></div>);
}

export function CreateFolderModal({ isOpen, onClose, onCreate }: any) {
  const [name, setName] = useState('');
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-md"><div className="bg-gradient-to-r from-teal-600 to-teal-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Create Folder</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><label className="block text-sm font-medium mb-2">Folder Name</label><input type="text" value={name} onChange={(e) => setName(e.target.value)} className="w-full px-3 py-2 border rounded-lg" /></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onCreate({ name })} className="px-4 py-2 bg-teal-600 text-white rounded-lg">Create</button></div></div></div>);
}

export function SetPermissionsModal({ isOpen, onClose, onSet, doc }: any) {
  const [permissions, setPermissions] = useState({ view: true, edit: false, delete: false });
  if (!isOpen || !doc) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-md"><div className="bg-gradient-to-r from-indigo-600 to-indigo-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Set Permissions</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6 space-y-3"><label className="flex items-center"><input type="checkbox" checked={permissions.view} onChange={(e) => setPermissions({...permissions, view: e.target.checked})} className="mr-2" /><span>View</span></label><label className="flex items-center"><input type="checkbox" checked={permissions.edit} onChange={(e) => setPermissions({...permissions, edit: e.target.checked})} className="mr-2" /><span>Edit</span></label><label className="flex items-center"><input type="checkbox" checked={permissions.delete} onChange={(e) => setPermissions({...permissions, delete: e.target.checked})} className="mr-2" /><span>Delete</span></label></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onSet(permissions)} className="px-4 py-2 bg-indigo-600 text-white rounded-lg">Save</button></div></div></div>);
}

export function VersionHistoryModal({ isOpen, onClose, doc }: any) {
  if (!isOpen || !doc) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-3xl"><div className="bg-gradient-to-r from-yellow-600 to-yellow-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Version History</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><p className="text-gray-600">Version history for {doc.name}</p></div><div className="bg-gray-50 px-6 py-4 flex justify-end border-t"><button onClick={onClose} className="px-4 py-2 bg-yellow-600 text-white rounded-lg">Close</button></div></div></div>);
}

export function BulkDownloadModal({ isOpen, onClose, onDownload, selectedDocs }: any) {
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-md"><div className="bg-gradient-to-r from-emerald-600 to-emerald-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Bulk Download</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><p className="text-gray-700">Download {selectedDocs?.length || 0} documents as ZIP?</p></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onDownload()} className="px-4 py-2 bg-emerald-600 text-white rounded-lg">Download</button></div></div></div>);
}

export function FilterDocumentsModal({ isOpen, onClose, onApply }: any) {
  const [filters, setFilters] = useState({ category: 'all', dateRange: 'all' });
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-2xl"><div className="bg-gradient-to-r from-cyan-600 to-cyan-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Filter Documents</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><div className="grid grid-cols-2 gap-4"><div><label className="block text-sm font-medium mb-1">Category</label><select value={filters.category} onChange={(e) => setFilters({...filters, category: e.target.value})} className="w-full px-3 py-2 border rounded-lg"><option value="all">All</option><option>Contract</option><option>Drawing</option></select></div><div><label className="block text-sm font-medium mb-1">Date Range</label><select value={filters.dateRange} onChange={(e) => setFilters({...filters, dateRange: e.target.value})} className="w-full px-3 py-2 border rounded-lg"><option value="all">All</option><option>This Week</option><option>This Month</option></select></div></div></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onApply(filters)} className="px-4 py-2 bg-cyan-600 text-white rounded-lg">Apply</button></div></div></div>);
}

export function SearchDocumentsModal({ isOpen, onClose, onSearch }: any) {
  const [query, setQuery] = useState('');
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-2xl"><div className="bg-gradient-to-r from-pink-600 to-pink-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Search Documents</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><input type="text" value={query} onChange={(e) => setQuery(e.target.value)} className="w-full px-4 py-3 border rounded-lg text-lg" placeholder="Search documents..." /></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onSearch({ query })} className="px-4 py-2 bg-pink-600 text-white rounded-lg">Search</button></div></div></div>);
}

export function TagDocumentsModal({ isOpen, onClose, onTag, selectedDocs }: any) {
  const [tags, setTags] = useState('');
  if (!isOpen) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-md"><div className="bg-gradient-to-r from-amber-600 to-amber-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Tag Documents</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><p className="text-sm text-gray-600 mb-2">Tagging {selectedDocs?.length || 0} documents</p><label className="block text-sm font-medium mb-2">Tags (comma-separated)</label><input type="text" value={tags} onChange={(e) => setTags(e.target.value)} className="w-full px-3 py-2 border rounded-lg" /></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onTag({ tags })} className="px-4 py-2 bg-amber-600 text-white rounded-lg">Tag</button></div></div></div>);
}

export function DeleteDocumentModal({ isOpen, onClose, onDelete, doc }: any) {
  if (!isOpen || !doc) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-md"><div className="bg-gradient-to-r from-red-600 to-red-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Delete Document</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><p className="text-gray-700">Are you sure you want to delete {doc.name}?</p><p className="text-sm text-red-600 mt-2">This action cannot be undone.</p></div><div className="bg-gray-50 px-6 py-4 flex justify-end space-x-3 border-t"><button onClick={onClose} className="px-4 py-2 border rounded-lg">Cancel</button><button onClick={() => onDelete()} className="px-4 py-2 bg-red-600 text-white rounded-lg">Delete</button></div></div></div>);
}

export function PreviewDocumentModal({ isOpen, onClose, doc }: any) {
  if (!isOpen || !doc) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-5xl max-h-[90vh] overflow-hidden"><div className="bg-gradient-to-r from-violet-600 to-violet-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">{doc.name}</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6 overflow-y-auto max-h-[calc(90vh-120px)]"><p className="text-gray-600">Document preview for {doc.name}</p></div><div className="bg-gray-50 px-6 py-4 flex justify-end border-t"><button onClick={onClose} className="px-4 py-2 bg-violet-600 text-white rounded-lg">Close</button></div></div></div>);
}

export function ViewDetailsModal({ isOpen, onClose, doc }: any) {
  if (!isOpen || !doc) return null;
  return (<div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4"><div className="bg-white rounded-lg shadow-xl w-full max-w-3xl"><div className="bg-gradient-to-r from-slate-600 to-slate-700 px-6 py-4 flex justify-between items-center"><h2 className="text-xl font-bold text-white">Document Details</h2><button onClick={onClose} className="text-white"><X className="h-5 w-5" /></button></div><div className="p-6"><p className="text-gray-600">Details for {doc.name}</p></div><div className="bg-gray-50 px-6 py-4 flex justify-end border-t"><button onClick={onClose} className="px-4 py-2 bg-slate-600 text-white rounded-lg">Close</button></div></div></div>);
}

{
  "permissions": {
    "allow": [
      "Bash(findstr:*)",
      "Bash(curl:*)",
      "Bash(test:*)",
      "Bash(psql:*)",
      "Bash(redis-cli:*)",
      "Bash(find:*)",
      "Bash(wc:*)",
      "Bash(ls:*)",
      "Bash(for:*)",
      "Bash(do test -f \"$file\")",
      "Bash(echo \"exists: $file\")",
      "Bash(echo \"new: $file\")",
      "Bash(done)",
      "Bash(echo:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(dir:*)",
      "Bash(mkdir:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run dev:*)",
      "Bash(netstat:*)",
      "Bash(npx next:*)",
      "Bash(node:*)",
      "Bash(npm install:*)",
      "Bash(taskkill:*)",
      "Bash(python:*)",
      "Bash(awk:*)",
      "Bash(npm run build:*)",
      "Bash(npm cache clean:*)",
      "Bash(npx eslint:*)",
      "Bash(npx tsc:*)",
      "Bash(timeout:*)",
      "Bash(powershell:*)",
      "Bash(cd:*)",
      "Bash(do if [ -f \"$dir/page.tsx\" ])",
      "Bash(then wc -l \"$dir/page.tsx\")",
      "Bash(else echo \"âœ— $dir: MISSING\")",
      "Bash(fi)",
      "Bash(do echo \"$file\")",
      "Bash(do echo \"=== $dir ===\")",
      "Bash(cat:*)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then echo \"exists: $file\")",
      "Bash(else echo \"new: $file\")",
      "Bash(do if [ -f \"(modules)/$route/page.tsx\" ])",
      "Bash([ -f \"$route/page.tsx\" ])",
      "Bash(then echo \"EXISTS: $route\")",
      "Bash(else echo \"MISSING: $route\")",
      "Bash(do if [ -d \"(modules)/$route\" ])",
      "Bash([ -f \"(modules)/$route/page.tsx\" ])",
      "Bash([ -d \"$route\" ])",
      "Bash(1)",
      "Bash(do grep -n \"Tool\" \"$file\")",
      "Bash(do echo \"FILE: $file\")",
      "Bash(do sed -i 's/\\bPriority\\b/Flag/g' \"$file\")",
      "Bash(do sed -i \"s/@heroicons\\/react\\/24\\/outline/lucide-react/g\" \"$file\")",
      "Bash(cut:*)",
      "Bash(do sed -i \"s/{ key: ''/{ id: ''/g; s/, label:/, accessor: ''\\1'', label:/g\" \"$file\")",
      "Bash(do sed -i \"s/{ key: ''\\([^'']*\\)'', label:/{ id: ''\\1'', accessor: ''\\1'', label:/g\" \"$file\")",
      "Bash(do sed -i \"s/import StatusBadge from/import StatusBadge, { BadgeStatus } from/g\" \"$file\")",
      "Bash(do)",
      "Bash(grep:*)",
      "Bash(do sed -i 's/aValue < bValue/aValue !== undefined \\&\\& bValue !== undefined \\&\\& aValue < bValue/g; s/aValue > bValue/aValue !== undefined \\&\\& bValue !== undefined \\&\\& aValue > bValue/g' \"$file\")",
      "Bash(do sed -i 's/getTrendIcon(metric\\.trend,/getTrendIcon(metric.trend as \"\"up\"\" | \"\"down\"\" | \"\"stable\"\",/g' $file/page.tsx)"
    ],
    "deny": [],
    "ask": []
  }
}
